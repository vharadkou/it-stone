// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "it-stone-server/models"
)

// CallbackOKCode is the HTTP code returned for type CallbackOK
const CallbackOKCode int = 200

/*CallbackOK login

swagger:response callbackOK
*/
type CallbackOK struct {

	/*
	  In: Body
	*/
	Payload *models.UserToken `json:"body,omitempty"`
}

// NewCallbackOK creates CallbackOK with default headers values
func NewCallbackOK() *CallbackOK {

	return &CallbackOK{}
}

// WithPayload adds the payload to the callback o k response
func (o *CallbackOK) WithPayload(payload *models.UserToken) *CallbackOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the callback o k response
func (o *CallbackOK) SetPayload(payload *models.UserToken) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CallbackOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CallbackDefault error

swagger:response callbackDefault
*/
type CallbackDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCallbackDefault creates CallbackDefault with default headers values
func NewCallbackDefault(code int) *CallbackDefault {
	if code <= 0 {
		code = 500
	}

	return &CallbackDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the callback default response
func (o *CallbackDefault) WithStatusCode(code int) *CallbackDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the callback default response
func (o *CallbackDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the callback default response
func (o *CallbackDefault) WithPayload(payload *models.Error) *CallbackDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the callback default response
func (o *CallbackDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CallbackDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
