// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
	strfmt "github.com/go-openapi/strfmt"
	swag "github.com/go-openapi/swag"
)

// GetV0LoginHandlerFunc turns a function with the right signature into a get v0 login handler
type GetV0LoginHandlerFunc func(GetV0LoginParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetV0LoginHandlerFunc) Handle(params GetV0LoginParams) middleware.Responder {
	return fn(params)
}

// GetV0LoginHandler interface for that can handle valid get v0 login params
type GetV0LoginHandler interface {
	Handle(GetV0LoginParams) middleware.Responder
}

// NewGetV0Login creates a new http.Handler for the get v0 login operation
func NewGetV0Login(ctx *middleware.Context, handler GetV0LoginHandler) *GetV0Login {
	return &GetV0Login{Context: ctx, Handler: handler}
}

/*GetV0Login swagger:route GET /v0/login User getV0Login

Login by using Google client OAuth 2.0.

*/
type GetV0Login struct {
	Context *middleware.Context
	Handler GetV0LoginHandler
}

func (o *GetV0Login) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetV0LoginParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetV0LoginOKBody get v0 login o k body
// swagger:model GetV0LoginOKBody
type GetV0LoginOKBody struct {

	// access token
	AccessToken string `json:"access_token,omitempty"`
}

// Validate validates this get v0 login o k body
func (o *GetV0LoginOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetV0LoginOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetV0LoginOKBody) UnmarshalBinary(b []byte) error {
	var res GetV0LoginOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
