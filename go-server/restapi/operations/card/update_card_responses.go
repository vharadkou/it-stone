// Code generated by go-swagger; DO NOT EDIT.

package card

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "it-stone-server/models"
)

// UpdateCardOKCode is the HTTP code returned for type UpdateCardOK
const UpdateCardOKCode int = 200

/*UpdateCardOK The card has been updated

swagger:response updateCardOK
*/
type UpdateCardOK struct {

	/*
	  In: Body
	*/
	Payload *models.Card `json:"body,omitempty"`
}

// NewUpdateCardOK creates UpdateCardOK with default headers values
func NewUpdateCardOK() *UpdateCardOK {

	return &UpdateCardOK{}
}

// WithPayload adds the payload to the update card o k response
func (o *UpdateCardOK) WithPayload(payload *models.Card) *UpdateCardOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update card o k response
func (o *UpdateCardOK) SetPayload(payload *models.Card) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCardOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UpdateCardDefault Error

swagger:response updateCardDefault
*/
type UpdateCardDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateCardDefault creates UpdateCardDefault with default headers values
func NewUpdateCardDefault(code int) *UpdateCardDefault {
	if code <= 0 {
		code = 500
	}

	return &UpdateCardDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the update card default response
func (o *UpdateCardDefault) WithStatusCode(code int) *UpdateCardDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the update card default response
func (o *UpdateCardDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the update card default response
func (o *UpdateCardDefault) WithPayload(payload *models.Error) *UpdateCardDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update card default response
func (o *UpdateCardDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCardDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
