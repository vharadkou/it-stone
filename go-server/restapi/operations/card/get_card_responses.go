// Code generated by go-swagger; DO NOT EDIT.

package card

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "it-stone-server/models"
)

// GetCardOKCode is the HTTP code returned for type GetCardOK
const GetCardOKCode int = 200

/*GetCardOK Return a card with the specified ID

swagger:response getCardOK
*/
type GetCardOK struct {

	/*
	  In: Body
	*/
	Payload *models.Card `json:"body,omitempty"`
}

// NewGetCardOK creates GetCardOK with default headers values
func NewGetCardOK() *GetCardOK {

	return &GetCardOK{}
}

// WithPayload adds the payload to the get card o k response
func (o *GetCardOK) WithPayload(payload *models.Card) *GetCardOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get card o k response
func (o *GetCardOK) SetPayload(payload *models.Card) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCardOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCardUnauthorizedCode is the HTTP code returned for type GetCardUnauthorized
const GetCardUnauthorizedCode int = 401

/*GetCardUnauthorized Authentication information is missing or invalid

swagger:response getCardUnauthorized
*/
type GetCardUnauthorized struct {
	/*

	 */
	WWWAuthenticate string `json:"WWW_Authenticate"`
}

// NewGetCardUnauthorized creates GetCardUnauthorized with default headers values
func NewGetCardUnauthorized() *GetCardUnauthorized {

	return &GetCardUnauthorized{}
}

// WithWWWAuthenticate adds the wWWAuthenticate to the get card unauthorized response
func (o *GetCardUnauthorized) WithWWWAuthenticate(wWWAuthenticate string) *GetCardUnauthorized {
	o.WWWAuthenticate = wWWAuthenticate
	return o
}

// SetWWWAuthenticate sets the wWWAuthenticate to the get card unauthorized response
func (o *GetCardUnauthorized) SetWWWAuthenticate(wWWAuthenticate string) {
	o.WWWAuthenticate = wWWAuthenticate
}

// WriteResponse to the client
func (o *GetCardUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header WWW_Authenticate

	wWWAuthenticate := o.WWWAuthenticate
	if wWWAuthenticate != "" {
		rw.Header().Set("WWW_Authenticate", wWWAuthenticate)
	}

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// GetCardNotFoundCode is the HTTP code returned for type GetCardNotFound
const GetCardNotFoundCode int = 404

/*GetCardNotFound The card with the specified ID was not found.

swagger:response getCardNotFound
*/
type GetCardNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetCardNotFound creates GetCardNotFound with default headers values
func NewGetCardNotFound() *GetCardNotFound {

	return &GetCardNotFound{}
}

// WithPayload adds the payload to the get card not found response
func (o *GetCardNotFound) WithPayload(payload *models.Error) *GetCardNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get card not found response
func (o *GetCardNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCardNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetCardDefault Internal server error

swagger:response getCardDefault
*/
type GetCardDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetCardDefault creates GetCardDefault with default headers values
func NewGetCardDefault(code int) *GetCardDefault {
	if code <= 0 {
		code = 500
	}

	return &GetCardDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get card default response
func (o *GetCardDefault) WithStatusCode(code int) *GetCardDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get card default response
func (o *GetCardDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get card default response
func (o *GetCardDefault) WithPayload(payload *models.Error) *GetCardDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get card default response
func (o *GetCardDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCardDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
